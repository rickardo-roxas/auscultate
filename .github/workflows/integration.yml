name: Integration Tests

on:
    pull_request:
        branches: [ development, main ]

jobs:
    integration-tests:
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:latest
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: speech_scape
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
        steps:
            - uses: actions/checkout@v4

            - name: Create client .env file
              run: |
                  echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> client/.env.dev

            - name: Create server .env file
              run: |
                    echo "PORT=${{ secrets.PORT }}" >> server/.env.dev
                    echo "DB_HOST=${{ secrets.DB_HOST }}" >> server/.env.dev
                    echo "DB_USER=${{ secrets.DB_USER }}" >> server/.env.dev
                    echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> server/.env.dev
                    echo "DB_NAME=${{ secrets.DB_NAME }}" >> server/.env.dev
                    echo "DB_PORT=${{ secrets.DB_PORT }}" >> server/.env.dev
                    echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> server/.env.dev
                    echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> server/.env.dev

            - name: Reset services
              run: docker compose -f docker-compose.dev.yml down --volumes --remove-orphans

            - name: Build & start services
              run: docker compose -f docker-compose.dev.yml up -d --build
            
            - name: Stop Services
              run: docker compose -f docker-compose.dev.yml down

    #TODO: Deployment
